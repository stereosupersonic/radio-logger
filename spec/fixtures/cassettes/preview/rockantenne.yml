---
http_interactions:
- request:
    method: get
    uri: https://www.rockantenne.de/musik/song-suche
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 02 Oct 2017 14:16:33 GMT
      Server:
      - Apache
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Expires:
      - Thu, 31 Jul 1990 03:42:00 GMT
      X-Ua-Compatible:
      - IE=edge
      Vary:
      - Accept-Encoding
      Content-Type:
      - text/html; charset=UTF-8
      Accept-Ranges:
      - bytes
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - cookiesession1=38FF1D39MGQ87JU65BBL1ZSC2X6265ED;Path=/;HttpOnly
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!doctype html>
<!--[if lte IE 9]><html class="ie9 no-js rockantenne-de r814 " lang="de" > <![endif]-->
<!--[if gte IE 10]><html class="ie no-js rockantenne-de r814 " lang="de" > <![endif]-->
<!--[if !(IE) ]><!--> <html class="no-js rockantenne-de r814 " lang="de"> <!--<![endif]-->
<head>
    <!-- 814 -->
    <meta charset="utf-8">
    <title>Song-Suche | ROCK ANTENNE</title>

    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="noopd,noydir">
    <meta name="application-name" content="ROCK ANTENNE">
    <meta name="description" content="Was lief wann auf ROCK ANTENNE? Die Song-Suche weiß Rat! ">
    
    <meta property="og:title" content="Song-Suche">
    <meta property="og:description" content="Was lief wann auf ROCK ANTENNE? Die Song-Suche weiß Rat! ">
    <meta property="og:site_name" content="ROCK ANTENNE">
    <meta property="og:type" content="website">
    <meta property="og:locale" content="de_DE">
    <meta property="og:url" content="http://www.rockantenne.de/musik/song-suche">
    <meta property="og:image" content="https://cdn.antenne.de/rockantenne-de/uploads/images/opengraph/default-2017.jpg">
    <meta property="og:image:type" content="image/jpeg">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@ROCKANTENNE">
    <meta name="twitter:title" content="Song-Suche">
    <meta name="twitter:description" content="Was lief wann auf ROCK ANTENNE? Die Song-Suche weiß Rat! ">
    <meta name="twitter:image" content="https://cdn.antenne.de/rockantenne-de/uploads/images/opengraph/default-2017.jpg">

    <meta property="fb:pages" content="54821513519">
    <meta property="fb:app_id" content="220976516001">
    <meta name="google-site-verification" content="exJkVd7eGEDbH1WoYHLBal4o0LDTebFECPGn_L5ffl8">
    

    <link rel="canonical" href="http://www.rockantenne.de/musik/song-suche">
    <link rel="prefetch" href="/assets/templates/rockantenne-de/dist/rockantenne-de.1470221044.css">
    <link rel="dns-prefetch" href="//cdn.antenne.de/">
    <link rel="dns-prefetch" href="https://ajax.googleapis.com/">
    <link rel="radioepg" href="https://www.rockantenne.de/radiodns/spi/3.1/SI.xml">

    <link rel="stylesheet" href="/assets/templates/rockantenne-de/dist/rockantenne-de.1470221044.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Architects+Daughter|Open+Sans:400,400i,700,800">

    <script>
        function onContentLoaded(script){return"complete"==document.readyState||"loaded"==document.readyState?void script():void(window.addEventListener?window.addEventListener("DOMContentLoaded",script,!1):window.attachEvent?window.attachEvent("onload",script):window.onload=script)}function loadCSS(href){"use strict";var link=window.document.createElement("link");return link.rel="stylesheet",link.href=href,link.media="only x",document.head.appendChild(link),setTimeout(function(){link.media="all"}),link}function loadJS(src,async,cb){"use strict";var script=document.createElement("script");return"function"==typeof async&&(cb=async),script.async=!0,script.src=src,document.body?document.body.appendChild(script):document.head.appendChild(script),cb&&"function"==typeof cb&&(script.onload=cb),script}!function(h){h.className=h.className.replace("no-js","js")}(document.documentElement),"undefined"==typeof window.googletag&&(window.googletag={}),window.googletag.cmd=window.googletag.cmd||[],window.mediaplayers={},window.lazySizesConfig={addClasses:!0},loadJS("/assets/tpl/rockantenne-de/dist/images.1470221044.js",!0,function(){onContentLoaded(function(){window.lazySizes.init()})});
//# sourceMappingURL=/assets/templates/rockantenne-de/dist/head.js.map
    </script>
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js" onload="window.jqueryLoaded=true;"></script>
    
    <script> 
        window.dataLayer = [{
            // content related inforatmion
            'context': 'rockantenne-de',
            'resource_id': 814,
            'is_article': false,
            'is_webview': false,
            'webview_app': '',
            
            // ad related information
            'ads_disabled': false,
            'oms_site': 'pn.rock-antenne.de', 
            'oms_zone': 'entertainment',
            'yoc_zone': '14', 
        }];
        
        // add targetings based on hostname
        var hostname = window.location.hostname.split('.');
        window.dataLayer.push({'host': window.location.hostname});
        window.dataLayer.push({'domain': hostname[hostname.length - 2]});
        window.dataLayer.push({'environment': hostname[hostname.length - 3]});
        window.dataLayer.push({'path': window.location.pathname});
        
        // add targetings based on URL
        var pathArray = window.location.pathname.replace(/^\//,'').split('/');
        for (i=0; i < pathArray.length; ++i) {
            if (pathArray[i] !== '') {
                var obj = {};
                obj['url'+(i+1)] = pathArray[i];
                window.dataLayer.push(obj);
            }
        }
        
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-N7SWBBS');
    </script>
    
    
    <script>
        var kameleoonLoadingTimeout=1e3,kameleoonURL="https://sx5iocvtsj.kameleoon.eu",kameleoonProcessMessageEvent=function(event){kameleoonURL==event.origin&&(window.removeEventListener("message",kameleoonProcessMessageEvent),window.kameleoonExternalIFrameLoaded=!0,eval(event.data),Kameleoon.Analyst.load())};if(window.addEventListener&&window.addEventListener("message",kameleoonProcessMessageEvent,!1),!document.getElementById("kameleoonLoadingStyleSheet")&&!window.kameleoonDisplayPageTimeOut){var kameleoonS=document.getElementsByTagName("script")[0],kameleoonCc="* {visibility: hidden !important;background-image: none !important;}",kameleoonStn=document.createElement("style");kameleoonStn.type="text/css",kameleoonStn.id="kameleoonLoadingStyleSheet",kameleoonStn.styleSheet?kameleoonStn.styleSheet.cssText=kameleoonCc:kameleoonStn.appendChild(document.createTextNode(kameleoonCc)),kameleoonS.parentNode.insertBefore(kameleoonStn,kameleoonS),window.kameleoonDisplayPage=function(){kameleoonStn.parentNode&&kameleoonStn.parentNode.removeChild(kameleoonStn)},window.setTimeout(function(){},25),window.kameleoonDisplayPageTimeOut=window.setTimeout(window.kameleoonDisplayPage,kameleoonLoadingTimeout)}var iframeNode=document.createElement("iframe");iframeNode.src=kameleoonURL,iframeNode.id="kameleoonExternalIframe",iframeNode.style="float: left !important;opacity: 0.0 !important;width: 0px!important;height: 0px !important;",document.head.appendChild(iframeNode);
    </script>

    
    <link rel="apple-touch-icon" sizes="57x57" href="/assets/icons/rockantenne-de/apple-touch-icon-57x57.png?v=2">
        <link rel="apple-touch-icon" sizes="60x60" href="/assets/icons/rockantenne-de/apple-touch-icon-60x60.png?v=2">
        <link rel="apple-touch-icon" sizes="72x72" href="/assets/icons/rockantenne-de/apple-touch-icon-72x72.png?v=2">
        <link rel="apple-touch-icon" sizes="76x76" href="/assets/icons/rockantenne-de/apple-touch-icon-76x76.png?v=2">
        <link rel="apple-touch-icon" sizes="114x114" href="/assets/icons/rockantenne-de/apple-touch-icon-114x114.png?v=2">
        <link rel="apple-touch-icon" sizes="120x120" href="/assets/icons/rockantenne-de/apple-touch-icon-120x120.png?v=2">
        <link rel="apple-touch-icon" sizes="144x144" href="/assets/icons/rockantenne-de/apple-touch-icon-144x144.png?v=2">
        <link rel="apple-touch-icon" sizes="152x152" href="/assets/icons/rockantenne-de/apple-touch-icon-152x152.png?v=2">
        <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/rockantenne-de/apple-touch-icon-180x180.png?v=2">
        <link rel="icon" type="image/png" href="/assets/icons/rockantenne-de/favicon-32x32.png?v=2" sizes="32x32">
        <link rel="icon" type="image/png" href="/assets/icons/rockantenne-de/android-chrome-192x192.png?v=2" sizes="192x192">
        <link rel="icon" type="image/png" href="/assets/icons/rockantenne-de/favicon-96x96.png?v=2" sizes="96x96">
        <link rel="icon" type="image/png" href="/assets/icons/rockantenne-de/favicon-16x16.png?v=2" sizes="16x16">
        <link rel="manifest" href="/assets/icons/rockantenne-de/manifest.json?v=2">
        <link rel="mask-icon" href="/assets/icons/rockantenne-de/safari-pinned-tab.svg?v=2" color="#ed1c2e">
        <link rel="shortcut icon" href="/assets/icons/rockantenne-de/favicon.ico?v=2">
    
    <meta name="apple-mobile-web-app-title" content="ROCK ANTENNE">
    <meta name="application-name" content="ROCK ANTENNE">
    <meta name="msapplication-TileColor" content="#000000">
    <meta name="msapplication-TileImage" content="/assets/icons/rockantenne-de/mstile-144x144.png?v=2">
    <meta name="msapplication-config" content="/assets/icons/rockantenne-de/browserconfig.xml?v=2">
    <meta name="theme-color" content="#000000">
</head>

<body itemscope itemtype="http://schema.org/WebPage" style="background-image:url(//cdn.antenne.de/rockantenne-de/uploads/images/backgrounds/background_slash_neu.jpg);background-attachment: fixed;">
  <!--[if lte IE 8]>
 <div class="ie8-disclaimer">
     <p>
         Sie verwenden einen veralteten Webbrowser. Aus diesem Grund werden Teile der Website nicht optimal funktionieren. <br>
         Bitte aktualisieren Sie Ihren Webbrowser, um die optimale Benutzererfahrung zu erhalten.<br>
         <a href="https://www.whatbrowser.org/intl/de/" target="_blank">Für mehr Information, klicken Sie hier.</a>
     </p>
 </div>
 <![endif]-->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N7SWBBS" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>

    <div id="top" class="off-canvas-wrap">
        <div id="pagewrapper" class="pagewrapper">
            <div class="leaderboard-wrapper"><div id="leaderboard_1" class="aditem "></div></div>
            
            <header class="pageheader">
    <div class="row">
        <ul class="icon-nav large-5 medium-7 columns large-push-7 medium-push-5">
        
        
            <li class="icon webradio">
                <a href="http://www.webradio.de/rock-antenne/rockantenne-de" target="_blank" title="Webradio">
                    <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#playbutton"></use></svg>
                </a>
            </li>
        
        
            <li>
                <form class="searchform" method="get" action="/suche">
                    <input type="search" placeholder="Suchbegriff" name="query">
                    <button type="submit" aria-label="Suchen">
                        <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#search"></use></svg>
                    </button>
                </form>
            </li>
        </ul>
        
        <h1 id="logo" class="large-4 medium-5 columns large-pull-5 medium-pull-7 logo logo--rockantenne-de">
            <a href="/" title="zur Startseite">
                <img src="/assets/tpl/rockantenne-de/img/logo-rockantenne-de-header.svg" width="300" height="150"alt="Antenne Bayern">
                <span class="hide">Song-Suche</span>
            </a>
        </h1>
        
        <aside class="claim claim--rockantenne-de large-3 columns large-pull-5">
            
            <p>Rock<br>nonstop!</p>
            
            
        </aside>
    </div>
    
    <div class="row nav-bar" data-magellan-expedition="fixed">
        <nav class="mainnav" role="navigation" aria-label="Hauptnavigation">
            <ul>
                <li class=" is-parent level-1 item-801">
    <a href="/empfang/" title="Empfang">
        
        <span class="mainnav__linktext">Empfang</span>
    </a>
    <div><ul><li class="  level-2 item-824">
    <a href="/empfang/webradio" title="Webradio">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Webradio_150x150.jpg" width="75" height="75" alt="Webradio">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Webradio_150x150.jpg" alt="Webradio">
        <span class="mainnav__linktext">Webradio</span>
    </a>
    
</li><li class="  level-2 item-823">
    <a href="/empfang/apps" title="APP">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_App_150x150.jpg" width="75" height="75" alt="APP">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_App_150x150.jpg" alt="APP">
        <span class="mainnav__linktext">APP</span>
    </a>
    
</li><li class="  level-2 item-819">
    <a href="/empfang/ukw" title="UKW">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_UKW_150x150.jpg" width="75" height="75" alt="UKW">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_UKW_150x150.jpg" alt="UKW">
        <span class="mainnav__linktext">UKW</span>
    </a>
    
</li><li class="  level-2 item-821">
    <a href="/empfang/dab" title="DAB+">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_dab_150x150.jpg" width="75" height="75" alt="DAB+">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_dab_150x150.jpg" alt="DAB+">
        <span class="mainnav__linktext">DAB+</span>
    </a>
    
</li><li class="  level-2 item-822">
    <a href="/empfang/kabel" title="Kabel">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Kabel_150x150.jpg" width="75" height="75" alt="Kabel">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Kabel_150x150.jpg" alt="Kabel">
        <span class="mainnav__linktext">Kabel</span>
    </a>
    
</li><li class="  level-2 item-820">
    <a href="/empfang/sat" title="SAT">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_satellit_150x150.jpg" width="75" height="75" alt="SAT">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_satellit_150x150.jpg" alt="SAT">
        <span class="mainnav__linktext">SAT</span>
    </a>
    
</li><li class="  level-2 item-364558">
    <a href="/empfang/smart-tv" title="Smart TV">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_smart-tv_neu_150x150.jpg" width="75" height="75" alt="Smart TV">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_smart-tv_neu_150x150.jpg" alt="Smart TV">
        <span class="mainnav__linktext">Smart TV</span>
    </a>
    
</li><li class="  level-2 item-364547">
    <a href="/empfang/der-beste-rock-nonstop-mit-amazon-alexa" title="Amazon Echo">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_alexa_150x150.jpg" width="75" height="75" alt="Amazon Echo">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_alexa_150x150.jpg" alt="Amazon Echo">
        <span class="mainnav__linktext">Amazon Echo</span>
    </a>
    
</li><li class="  level-2 item-825">
    <a href="/empfang/streamlinks" title="Streamlinks">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Stream_150x150.jpg" width="75" height="75" alt="Streamlinks">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Stream_150x150.jpg" alt="Streamlinks">
        <span class="mainnav__linktext">Streamlinks</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-802">
    <a href="/aktionen/" title="Aktionen">
        
        <span class="mainnav__linktext">Aktionen</span>
    </a>
    <div><ul><li class="  level-2 item-318946">
    <a href="/aktionen/uebersicht" title="Übersicht">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_uebersicht_150x15.jpg" width="75" height="75" alt="Übersicht">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_uebersicht_150x15.jpg" alt="Übersicht">
        <span class="mainnav__linktext">Übersicht</span>
    </a>
    
</li><li class="  level-2 item-368318">
    <a href="/aktionen/rtm-2017-18/" title="ROCK THE MOUNTAIN 2017/2018">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/rtm_navi_150x150.jpg" width="75" height="75" alt="ROCK THE MOUNTAIN 2017/2018">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/rtm_navi_150x150.jpg" alt="ROCK THE MOUNTAIN 2017/2018">
        <span class="mainnav__linktext">ROCK THE MOUNTAIN 2017/2018</span>
    </a>
    
</li><li class="  level-2 item-281883">
    <a href="/aktionen/die-rock-antenne-motorradtour/" title="Die ROCK ANTENNE Motorradtour">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Motorradtour_150x150.jpg" width="75" height="75" alt="Die ROCK ANTENNE Motorradtour">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Motorradtour_150x150.jpg" alt="Die ROCK ANTENNE Motorradtour">
        <span class="mainnav__linktext">Die ROCK ANTENNE Motorradtour</span>
    </a>
    
</li><li class="  level-2 item-284023">
    <a href="/aktionen/events/" title="Events, die rocken!">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_eventplaner_150x150.jpg" width="75" height="75" alt="Events, die rocken!">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_eventplaner_150x150.jpg" alt="Events, die rocken!">
        <span class="mainnav__linktext">Events, die rocken!</span>
    </a>
    
</li><li class="  level-2 item-335420">
    <a href="/aktionen/taste-tosteron/" title="Taste-Tosteron: Männerrezepte mit Star-Koch Tobi Stegmann">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/aktionen/2017/taste-tosteron_navi_150x150.jpg" width="75" height="75" alt="Taste-Tosteron: Männerrezepte mit Star-Koch Tobi Stegmann">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/aktionen/2017/taste-tosteron_navi_150x150.jpg" alt="Taste-Tosteron: Männerrezepte mit Star-Koch Tobi Stegmann">
        <span class="mainnav__linktext">Taste-Tosteron: Männerrezepte mit Star-Koch Tobi Stegmann</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-803">
    <a href="/programm/" title="Programm">
        
        <span class="mainnav__linktext">Programm</span>
    </a>
    <div><ul><li class="  level-2 item-815">
    <a href="/programm/team/" title="Team">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_team_neu.jpg" width="75" height="75" alt="Team">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_team_neu.jpg" alt="Team">
        <span class="mainnav__linktext">Team</span>
    </a>
    
</li><li class="  level-2 item-806">
    <a href="/programm/sendungen/" title="Sendungen">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" width="75" height="75" alt="Sendungen">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" alt="Sendungen">
        <span class="mainnav__linktext">Sendungen</span>
    </a>
    
</li><li class="  level-2 item-807">
    <a href="/programm/rock-cities/" title="Rock Cities">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/rock_cities_navi_neu.jpg" width="75" height="75" alt="Rock Cities">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/rock_cities_navi_neu.jpg" alt="Rock Cities">
        <span class="mainnav__linktext">Rock Cities</span>
    </a>
    
</li><li class=" is-parent level-2 item-810">
    <a href="/programm/youtube-highlights/" title="Videos">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_youtube_neu.jpg" width="75" height="75" alt="Videos">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_youtube_neu.jpg" alt="Videos">
        <span class="mainnav__linktext">Videos</span>
    </a>
    <div><ul><li class="  level-3 item-289142">
    <a href="/programm/youtube-highlights/school-of-rock/" title="School of Rock - Der etwas andere Gitarrenunterricht!">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" width="75" height="75" alt="School of Rock - Der etwas andere Gitarrenunterricht!">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" alt="School of Rock - Der etwas andere Gitarrenunterricht!">
        <span class="mainnav__linktext">School of Rock - Der etwas andere Gitarrenunterricht!</span>
    </a>
    
</li><li class="  level-3 item-290150">
    <a href="/programm/youtube-highlights/interviews-mit-den-rockstars/" title="Hautnah am Star: Interviews mit den Rockstars">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" width="75" height="75" alt="Hautnah am Star: Interviews mit den Rockstars">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" alt="Hautnah am Star: Interviews mit den Rockstars">
        <span class="mainnav__linktext">Hautnah am Star: Interviews mit den Rockstars</span>
    </a>
    
</li><li class="  level-3 item-297190">
    <a href="/programm/youtube-highlights/spiel-und-spass-mit-rock-antenne/" title="Spiel und Spaß mit ROCK ANTENNE">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" width="75" height="75" alt="Spiel und Spaß mit ROCK ANTENNE">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" alt="Spiel und Spaß mit ROCK ANTENNE">
        <span class="mainnav__linktext">Spiel und Spaß mit ROCK ANTENNE</span>
    </a>
    
</li></ul></div>
</li><li class="  level-2 item-279640">
    <a href="/programm/crossover/" title="Fun & Facts">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_ra_crossover.jpg" width="75" height="75" alt="Fun &amp; Facts">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_ra_crossover.jpg" alt="Fun &amp; Facts">
        <span class="mainnav__linktext">Fun & Facts</span>
    </a>
    
</li><li class="  level-2 item-369157">
    <a href="/programm/podcasts/" title="Podcasts">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" width="75" height="75" alt="Podcasts">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" alt="Podcasts">
        <span class="mainnav__linktext">Podcasts</span>
    </a>
    
</li></ul></div>
</li><li class="active is-parent level-1 item-804">
    <a href="/musik/" title="Musik">
        
        <span class="mainnav__linktext">Musik</span>
    </a>
    <div><ul><li class="active  level-2 item-814">
    <a href="/musik/song-suche" title="Song-Suche">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Songsuche_150x150.jpg" width="75" height="75" alt="Song-Suche">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Songsuche_150x150.jpg" alt="Song-Suche">
        <span class="mainnav__linktext">Song-Suche</span>
    </a>
    
</li><li class="active  level-2 item-837">
    <a href="/musik/stars/" title="Stars">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Stars_150x150.jpg" width="75" height="75" alt="Stars">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Stars_150x150.jpg" alt="Stars">
        <span class="mainnav__linktext">Stars</span>
    </a>
    
</li><li class="active  level-2 item-812">
    <a href="/musik/musik-news/" title="Music News">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_musik_news.png" width="75" height="75" alt="Music News">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_musik_news.png" alt="Music News">
        <span class="mainnav__linktext">Music News</span>
    </a>
    
</li><li class="active  level-2 item-813">
    <a href="/musik/album-der-woche/" title="Album der Woche">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_album_der_woche_neu.jpg" width="75" height="75" alt="Album der Woche">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/navi_album_der_woche_neu.jpg" alt="Album der Woche">
        <span class="mainnav__linktext">Album der Woche</span>
    </a>
    
</li><li class="active  level-2 item-816">
    <a href="/musik/rock-antenne-band" title="ROCK ANTENNE Band">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_band_150x150.jpg" width="75" height="75" alt="ROCK ANTENNE Band">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_band_150x150.jpg" alt="ROCK ANTENNE Band">
        <span class="mainnav__linktext">ROCK ANTENNE Band</span>
    </a>
    
</li><li class="active  level-2 item-355295">
    <a href="/musik/soundcheck" title="Soundcheck">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" width="75" height="75" alt="Soundcheck">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/default.png" alt="Soundcheck">
        <span class="mainnav__linktext">Soundcheck</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-805">
    <a href="/konzerte/" title="Konzerte">
        
        <span class="mainnav__linktext">Konzerte</span>
    </a>
    <div><ul><li class="  level-2 item-279520">
    <a href="/konzerte/konzerte/" title="Konzertkalender">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Konzertkalender_150x150.jpg" width="75" height="75" alt="Konzertkalender">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Konzertkalender_150x150.jpg" alt="Konzertkalender">
        <span class="mainnav__linktext">Konzertkalender</span>
    </a>
    
</li><li class="  level-2 item-279522">
    <a href="/konzerte/festival-guide/" title="Festival-Guide">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Festival-Guide_150x150.jpg" width="75" height="75" alt="Festival-Guide">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Festival-Guide_150x150.jpg" alt="Festival-Guide">
        <span class="mainnav__linktext">Festival-Guide</span>
    </a>
    
</li><li class="  level-2 item-279519">
    <a href="/konzerte/radiokonzerte" title="Radiokonzerte">
        <noscript>
                <img src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Radiokonzerte_150x150.jpg" width="75" height="75" alt="Radiokonzerte">
            </noscript>
            <img class="lazyload" width="75" height="75" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/rockantenne-de/uploads/images/navigation-icons/neu_Radiokonzerte_150x150.jpg" alt="Radiokonzerte">
        <span class="mainnav__linktext">Radiokonzerte</span>
    </a>
    
</li></ul></div>
</li><li class="  level-1 item-291329">
    <a href="/spiele/" title="Spiele">
        
        <span class="mainnav__linktext">Spiele</span>
    </a>
    
</li><li class="  level-1 item-284476">
    <a href="/die-rock-antenne-hot-deals/" title="Hot Deals">
        
        <span class="mainnav__linktext">Hot Deals</span>
    </a>
    
</li>
            </ul>
            
            <div class="clearfix">
                <a href="#" class="nav-bar-webradio"><svg role="presentation" width="28" height="32"><use xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#playbutton"></svg> <span>Webradio</span></a>
                <a href="#" class="mobilenav__toggle"><svg role="presentation" width="20" height="32"><use xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#fa-bars"></svg> <span>Navigation</span></a>
            </div>
        </nav>
        
        
        <nav id="mobilenav" class="component--mobilenav">
    <div><ul class="mobilenav__list">
        <li class=" is-parent level-1 item-801">
    <a href="/empfang/" title="Empfang">
        <span class="mobilenav__linktext">Empfang</span>
    </a>
    <div><ul><li class="  level-2 item-824">
    <a href="/empfang/webradio" title="Webradio">
        <span class="mobilenav__linktext">Webradio</span>
    </a>
    
</li><li class="  level-2 item-823">
    <a href="/empfang/apps" title="APP">
        <span class="mobilenav__linktext">APP</span>
    </a>
    
</li><li class="  level-2 item-819">
    <a href="/empfang/ukw" title="UKW">
        <span class="mobilenav__linktext">UKW</span>
    </a>
    
</li><li class="  level-2 item-821">
    <a href="/empfang/dab" title="DAB+">
        <span class="mobilenav__linktext">DAB+</span>
    </a>
    
</li><li class="  level-2 item-822">
    <a href="/empfang/kabel" title="Kabel">
        <span class="mobilenav__linktext">Kabel</span>
    </a>
    
</li><li class="  level-2 item-820">
    <a href="/empfang/sat" title="SAT">
        <span class="mobilenav__linktext">SAT</span>
    </a>
    
</li><li class="  level-2 item-364558">
    <a href="/empfang/smart-tv" title="Smart TV">
        <span class="mobilenav__linktext">Smart TV</span>
    </a>
    
</li><li class="  level-2 item-364547">
    <a href="/empfang/der-beste-rock-nonstop-mit-amazon-alexa" title="Amazon Echo">
        <span class="mobilenav__linktext">Amazon Echo</span>
    </a>
    
</li><li class="  level-2 item-825">
    <a href="/empfang/streamlinks" title="Streamlinks">
        <span class="mobilenav__linktext">Streamlinks</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-802">
    <a href="/aktionen/" title="Aktionen">
        <span class="mobilenav__linktext">Aktionen</span>
    </a>
    <div><ul><li class="  level-2 item-318946">
    <a href="/aktionen/uebersicht" title="&Uuml;bersicht">
        <span class="mobilenav__linktext">Übersicht</span>
    </a>
    
</li><li class="  level-2 item-368318">
    <a href="/aktionen/rtm-2017-18/" title="ROCK THE MOUNTAIN 2017/2018">
        <span class="mobilenav__linktext">ROCK THE MOUNTAIN 2017/2018</span>
    </a>
    
</li><li class="  level-2 item-281883">
    <a href="/aktionen/die-rock-antenne-motorradtour/" title="Die ROCK ANTENNE Motorradtour">
        <span class="mobilenav__linktext">Die ROCK ANTENNE Motorradtour</span>
    </a>
    
</li><li class="  level-2 item-284023">
    <a href="/aktionen/events/" title="Events, die rocken!">
        <span class="mobilenav__linktext">Events, die rocken!</span>
    </a>
    
</li><li class="  level-2 item-335420">
    <a href="/aktionen/taste-tosteron/" title="Taste-Tosteron: M&auml;nnerrezepte mit Star-Koch Tobi Stegmann">
        <span class="mobilenav__linktext">Taste-Tosteron: Männerrezepte mit Star-Koch Tobi Stegmann</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-803">
    <a href="/programm/" title="Programm">
        <span class="mobilenav__linktext">Programm</span>
    </a>
    <div><ul><li class="  level-2 item-815">
    <a href="/programm/team/" title="Team">
        <span class="mobilenav__linktext">Team</span>
    </a>
    
</li><li class="  level-2 item-806">
    <a href="/programm/sendungen/" title="Sendungen">
        <span class="mobilenav__linktext">Sendungen</span>
    </a>
    
</li><li class="  level-2 item-807">
    <a href="/programm/rock-cities/" title="Rock Cities">
        <span class="mobilenav__linktext">Rock Cities</span>
    </a>
    
</li><li class="  level-2 item-810">
    <a href="/programm/youtube-highlights/" title="Videos">
        <span class="mobilenav__linktext">Videos</span>
    </a>
    
</li><li class="  level-2 item-279640">
    <a href="/programm/crossover/" title="Fun &amp; Facts">
        <span class="mobilenav__linktext">Fun & Facts</span>
    </a>
    
</li><li class="  level-2 item-369157">
    <a href="/programm/podcasts/" title="Podcasts">
        <span class="mobilenav__linktext">Podcasts</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-804">
    <a href="/musik/" title="Musik">
        <span class="mobilenav__linktext">Musik</span>
    </a>
    <div><ul><li class="  level-2 item-814">
    <a href="/musik/song-suche" title="Song-Suche">
        <span class="mobilenav__linktext">Song-Suche</span>
    </a>
    
</li><li class="  level-2 item-837">
    <a href="/musik/stars/" title="Stars">
        <span class="mobilenav__linktext">Stars</span>
    </a>
    
</li><li class="  level-2 item-812">
    <a href="/musik/musik-news/" title="Music News">
        <span class="mobilenav__linktext">Music News</span>
    </a>
    
</li><li class="  level-2 item-813">
    <a href="/musik/album-der-woche/" title="Album der Woche">
        <span class="mobilenav__linktext">Album der Woche</span>
    </a>
    
</li><li class="  level-2 item-816">
    <a href="/musik/rock-antenne-band" title="ROCK ANTENNE Band">
        <span class="mobilenav__linktext">ROCK ANTENNE Band</span>
    </a>
    
</li><li class="  level-2 item-355295">
    <a href="/musik/soundcheck" title="Soundcheck">
        <span class="mobilenav__linktext">Soundcheck</span>
    </a>
    
</li></ul></div>
</li><li class=" is-parent level-1 item-805">
    <a href="/konzerte/" title="Konzerte">
        <span class="mobilenav__linktext">Konzerte</span>
    </a>
    <div><ul><li class="  level-2 item-279520">
    <a href="/konzerte/konzerte/" title="Konzertkalender">
        <span class="mobilenav__linktext">Konzertkalender</span>
    </a>
    
</li><li class="  level-2 item-279522">
    <a href="/konzerte/festival-guide/" title="Festival-Guide">
        <span class="mobilenav__linktext">Festival-Guide</span>
    </a>
    
</li><li class="  level-2 item-279519">
    <a href="/konzerte/radiokonzerte" title="Radiokonzerte">
        <span class="mobilenav__linktext">Radiokonzerte</span>
    </a>
    
</li></ul></div>
</li><li class="  level-1 item-291329">
    <a href="/spiele/" title="Spiele">
        <span class="mobilenav__linktext">Spiele</span>
    </a>
    
</li><li class="  level-1 item-284476">
    <a href="/die-rock-antenne-hot-deals/" title="Hot Deals">
        <span class="mobilenav__linktext">Hot Deals</span>
    </a>
    
</li>
        <li class="  level- item-26">
    <a href="http://www.antenne.de/experten-tipps/wetter/" title="Wetter">
        <span class="mobilenav__linktext">Wetter</span>
    </a>
    
</li>
        <li class="  level- item-65">
    <a href="http://www.antenne.de/alt/verkehr" title="Verkehr">
        <span class="mobilenav__linktext">Verkehr</span>
    </a>
    
</li>
        
    </ul></div>
</nav>
        
        <div class="nav-bar__webradio" data-component="webradio">
            <div class="row">
                <div class="small-3 columns webradio__onair">
                    <svg role="presentation" width="32" height="32"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#broadcast"></use></svg>
                    <span>On Air</span>
                </div>
                
                <div class="small-6 columns webradio__track show-with-js">
                    <div class="webradio__track-cover">
                        <a href="/musik/stars/" data-componentproperty="artistsearch"><img data-componentproperty="now.cover" src="/assets/tpl/img/placeholder.gif" alt=""></a>
                    </div>
                    <div class="webradio__track-info">
                        <span class="webradio__current-track"><span data-componentproperty="now.artist">Warte auf</span><br><span data-componentproperty="now.song">Playlist-Daten…</span></span>
                    </div>
                </div>
                
                <div class="small-3 columns right">
                    <a href="http://www.webradio.de/rock-antenne/rockantenne-de" target="_blank"><svg role="presentation" width="36" height="36" class="webradio__play"><use xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#playbutton"></svg></a>
                </div>
            </div>
        </div>
        
    </div>
</header>

            
            <div class="pagecontent">
                
                
                
    	        <div id="billboard_1" class="aditem "></div>
    	        
    	        <div class="row hide-for-small breadcrumb-row">
    <div class="small-12 columns">
        <ul class="breadcrumb" itemprop="breadcrumb">
            <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb"><a href="http://www.rockantenne.de/" itemprop="url" title="zur Startseite"><svg role="presentation" title="Antenne Bayern" class="breadcrumbs__icon-home"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#icon-home"></use></svg><span itemprop="title" class="hide">ANTENNE-BAYERN</span></a></li>
            <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/musik/" itemprop="url"><span itemprop="title">Musik</span></a></li>
<li itemscope itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/musik/song-suche" itemprop="url"><span itemprop="title">Song-Suche</span></a></li>
        </ul>
    </div>
</div>
                
                
                
                <div class="row">
    <main role="main" itemprop="mainContentOfPage" class="large-8 columns large-push-4">
        <div class="search_header">
    <h1 class="search_header__headline no-margin-bottom">Suchergebnis</h1>
    
</div>

<div class="music_results">
    <ul class="music_results__list">
        <li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_31508">
                <div class="mediaplayer jwplayer" id="mediaplayer-31508" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Iris - Goo Goo Dolls" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/31508.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/31508.jpg" alt="Goo Goo Dolls" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/31508.jpg" alt="Goo Goo Dolls">
                </div>
                <style>
                    .component--mediaplayer_31508:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Goo+Goo+Dolls" title="Iris">Iris</a></h2>
                    <p class="artist"><a href="/musik/stars/Goo+Goo+Dolls">Goo Goo Dolls</a></p>
                    <p>lief am 02.10.2017 um 16:15 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Goo Goo Dolls%20Iris&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Goo+Goo+Dolls" class="button_gallery" title="zur Galerie von Goo Goo Dolls"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Goo+Goo+Dolls" title="Iris" class="artist_info__link">Alle Infos zu Goo Goo Dolls&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-31508'] = {
            'id': 'mediaplayer-31508',
            'options': {
                title: 'Iris',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/31508.mp3",
                image: "//cdn.antenne.de/cover/200x200/31508.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_21382">
                <div class="mediaplayer jwplayer" id="mediaplayer-21382" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Easy livin&#039; - Uriah Heep" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/21382.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/21382.jpg" alt="Uriah Heep" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/21382.jpg" alt="Uriah Heep">
                </div>
                <style>
                    .component--mediaplayer_21382:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Uriah+Heep" title="Easy livin&#039;">Easy livin'</a></h2>
                    <p class="artist"><a href="/musik/stars/Uriah+Heep">Uriah Heep</a></p>
                    <p>lief am 02.10.2017 um 16:12 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Uriah Heep%20Easy livin'&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Uriah+Heep" class="button_gallery" title="zur Galerie von Uriah Heep"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Uriah+Heep" title="Easy livin&#039;" class="artist_info__link">Alle Infos zu Uriah Heep&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-21382'] = {
            'id': 'mediaplayer-21382',
            'options': {
                title: 'Easy livin&#039;',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/21382.mp3",
                image: "//cdn.antenne.de/cover/200x200/21382.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_173802">
                <div class="mediaplayer jwplayer" id="mediaplayer-173802" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Six feet under - Kissin&#039; Dynamite" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/173802.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/173802.jpg" alt="Kissin&#039; Dynamite" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/173802.jpg" alt="Kissin&#039; Dynamite">
                </div>
                <style>
                    .component--mediaplayer_173802:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Kissin%27+Dynamite" title="Six feet under">Six feet under</a></h2>
                    <p class="artist"><a href="/musik/stars/Kissin%27+Dynamite">Kissin' Dynamite</a></p>
                    <p>lief am 02.10.2017 um 16:07 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Kissin' Dynamite%20Six feet under&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Kissin%27+Dynamite" class="button_gallery" title="zur Galerie von Kissin&#039; Dynamite"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Kissin%27+Dynamite" title="Six feet under" class="artist_info__link">Alle Infos zu Kissin' Dynamite&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-173802'] = {
            'id': 'mediaplayer-173802',
            'options': {
                title: 'Six feet under',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/173802.mp3",
                image: "//cdn.antenne.de/cover/200x200/173802.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_15164">
                <div class="mediaplayer jwplayer" id="mediaplayer-15164" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Runaway - Bon Jovi" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/15164.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/15164.jpg" alt="Bon Jovi" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/15164.jpg" alt="Bon Jovi">
                </div>
                <style>
                    .component--mediaplayer_15164:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Bon+Jovi" title="Runaway">Runaway</a></h2>
                    <p class="artist"><a href="/musik/stars/Bon+Jovi">Bon Jovi</a></p>
                    <p>lief am 02.10.2017 um 16:03 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Bon Jovi%20Runaway&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Bon+Jovi" class="button_gallery" title="zur Galerie von Bon Jovi"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Bon+Jovi" title="Runaway" class="artist_info__link">Alle Infos zu Bon Jovi&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-15164'] = {
            'id': 'mediaplayer-15164',
            'options': {
                title: 'Runaway',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/15164.mp3",
                image: "//cdn.antenne.de/cover/200x200/15164.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_162479">
                <div class="mediaplayer jwplayer" id="mediaplayer-162479" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="All along the watchtower - Jimi Hendrix" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/162479.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/162479.jpg" alt="Jimi Hendrix" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/162479.jpg" alt="Jimi Hendrix">
                </div>
                <style>
                    .component--mediaplayer_162479:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Jimi+Hendrix" title="All along the watchtower">All along the watchtower</a></h2>
                    <p class="artist"><a href="/musik/stars/Jimi+Hendrix">Jimi Hendrix</a></p>
                    <p>lief am 02.10.2017 um 15:55 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Jimi Hendrix%20All along the watchtower&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Jimi+Hendrix" class="button_gallery" title="zur Galerie von Jimi Hendrix"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Jimi+Hendrix" title="All along the watchtower" class="artist_info__link">Alle Infos zu Jimi Hendrix&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-162479'] = {
            'id': 'mediaplayer-162479',
            'options': {
                title: 'All along the watchtower',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/162479.mp3",
                image: "//cdn.antenne.de/cover/200x200/162479.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_232723">
                <div class="mediaplayer jwplayer" id="mediaplayer-232723" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="KILL4ME - Marilyn Manson" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/232723.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/232723.jpg" alt="Marilyn Manson" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/232723.jpg" alt="Marilyn Manson">
                </div>
                <style>
                    .component--mediaplayer_232723:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Marilyn+Manson" title="KILL4ME">KILL4ME</a></h2>
                    <p class="artist"><a href="/musik/stars/Marilyn+Manson">Marilyn Manson</a></p>
                    <p>lief am 02.10.2017 um 15:48 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Marilyn Manson%20KILL4ME&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Marilyn+Manson" class="button_gallery" title="zur Galerie von Marilyn Manson"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Marilyn+Manson" title="KILL4ME" class="artist_info__link">Alle Infos zu Marilyn Manson&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-232723'] = {
            'id': 'mediaplayer-232723',
            'options': {
                title: 'KILL4ME',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/232723.mp3",
                image: "//cdn.antenne.de/cover/200x200/232723.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_18070">
                <div class="mediaplayer jwplayer" id="mediaplayer-18070" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="I&#039;m gonna be (500 miles) - Proclaimers" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/18070.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/18070.jpg" alt="Proclaimers" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/18070.jpg" alt="Proclaimers">
                </div>
                <style>
                    .component--mediaplayer_18070:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Proclaimers" title="I&#039;m gonna be (500 miles)">I'm gonna be (500 miles)</a></h2>
                    <p class="artist"><a href="/musik/stars/Proclaimers">Proclaimers</a></p>
                    <p>lief am 02.10.2017 um 15:45 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Proclaimers%20I'm gonna be (500 miles)&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Proclaimers" class="button_gallery" title="zur Galerie von Proclaimers"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Proclaimers" title="I&#039;m gonna be (500 miles)" class="artist_info__link">Alle Infos zu Proclaimers&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-18070'] = {
            'id': 'mediaplayer-18070',
            'options': {
                title: 'I&#039;m gonna be (500 miles)',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/18070.mp3",
                image: "//cdn.antenne.de/cover/200x200/18070.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_15627">
                <div class="mediaplayer jwplayer" id="mediaplayer-15627" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Amazing - Aerosmith" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/15627.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/15627.jpg" alt="Aerosmith" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/15627.jpg" alt="Aerosmith">
                </div>
                <style>
                    .component--mediaplayer_15627:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Aerosmith" title="Amazing">Amazing</a></h2>
                    <p class="artist"><a href="/musik/stars/Aerosmith">Aerosmith</a></p>
                    <p>lief am 02.10.2017 um 15:39 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Aerosmith%20Amazing&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Aerosmith" class="button_gallery" title="zur Galerie von Aerosmith"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Aerosmith" title="Amazing" class="artist_info__link">Alle Infos zu Aerosmith&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-15627'] = {
            'id': 'mediaplayer-15627',
            'options': {
                title: 'Amazing',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/15627.mp3",
                image: "//cdn.antenne.de/cover/200x200/15627.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_21764">
                <div class="mediaplayer jwplayer" id="mediaplayer-21764" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Danger zone - Kenny Loggins" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/21764.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/21764.jpg" alt="Kenny Loggins" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/21764.jpg" alt="Kenny Loggins">
                </div>
                <style>
                    .component--mediaplayer_21764:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Kenny+Loggins" title="Danger zone">Danger zone</a></h2>
                    <p class="artist"><a href="/musik/stars/Kenny+Loggins">Kenny Loggins</a></p>
                    <p>lief am 02.10.2017 um 15:36 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Kenny Loggins%20Danger zone&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Kenny+Loggins" class="button_gallery" title="zur Galerie von Kenny Loggins"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Kenny+Loggins" title="Danger zone" class="artist_info__link">Alle Infos zu Kenny Loggins&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-21764'] = {
            'id': 'mediaplayer-21764',
            'options': {
                title: 'Danger zone',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/21764.mp3",
                image: "//cdn.antenne.de/cover/200x200/21764.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

<li class="music_results__item">
    <div class="row">
        <div class="music_results__media small-12 medium-4 columns">
            <figure data-component="mediaplayer" class="component--mediaplayer component--mediaplayer_161687">
                <div class="mediaplayer jwplayer" id="mediaplayer-161687" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
                    <meta itemprop="name" content="Jailbreak - Thin Lizzy" />
                    <meta itemprop="contentURL" content="https://www.antenne.de/tecweb/media/webnethookbase/161687.mp3" />
                    <noscript>
                        <img src="//cdn.antenne.de/cover/200x200/161687.jpg" alt="Thin Lizzy" />
                    </noscript>
                    <img class="lazyload" src="/assets/tpl/img/placeholder.gif" data-src="//cdn.antenne.de/cover/200x200/161687.jpg" alt="Thin Lizzy">
                </div>
                <style>
                    .component--mediaplayer_161687:before {
                        padding-top: 100%;
                    }
                </style>
            </figure>
        </div>
        
        <div class="music_results__content small-12 medium-8 columns">
            <div class="row">
                <div class="medium-8 columns">
                    <h2 class="song_title"><a href="/musik/stars/Thin+Lizzy" title="Jailbreak">Jailbreak</a></h2>
                    <p class="artist"><a href="/musik/stars/Thin+Lizzy">Thin Lizzy</a></p>
                    <p>lief am 02.10.2017 um 15:27 Uhr</p>
                </div>
                
                <div class="medium-4 columns">
                    <div class="music_results__share">
                        
                        <a class="button_amazon"
                           href="https://www.amazon.de/gp/search?ie=UTF8&keywords=Thin Lizzy%20Jailbreak&tag=aby-21&index=digital-music&linkCode=ur2&camp=1638&creative=6742" target="_blank" title="Amazon"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#amazon"></use></svg> <span class="button_text_label">Kaufen</span></a>
                    </div>
                </div>
                
                <div class="small-12 columns">
                    <p class="artist_info">
                        
                        <a href="/musik/stars/Thin+Lizzy" class="button_gallery" title="zur Galerie von Thin Lizzy"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gallery"></use></svg><span class="hide">zur Galerie</span></a>
                        <a href="/musik/stars/Thin+Lizzy" title="Jailbreak" class="artist_info__link">Alle Infos zu Thin Lizzy&nbsp;<svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        window.mediaplayers['mediaplayer-161687'] = {
            'id': 'mediaplayer-161687',
            'options': {
                title: 'Jailbreak',
                file: "https://www.antenne.de/tecweb/media/webnethookbase/161687.mp3",
                image: "//cdn.antenne.de/cover/200x200/161687.jpg",
                autostart: false,
                controls: true,
                aspectratio: '1:1',
                width: '100%',
                display_advertising: false,
                sharing: false
            }
        };
    </script>
    
</li>

    </ul>
</div>
<div class="pages">
    <ul class="pages__list">
       <li class="active"><a class="active" href="/musik/song-suche">1</a></li>
<li><a title="Seite 2" href="/musik/song-suche/seite-2">2</a></li><li class="control"><a href="/musik/song-suche/seite-2" rel="next" class="chevron" title="Nächste Seite"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#chevron-right"></use></svg></a></li><li class="control"><a href="/musik/song-suche/seite-2">Letzte Seite</a></li>
    </ul>
</div>

<div id="banner-content-1" class="aditem "></div>

    </main>
    
    
    
    <aside class="main-sidebar large-4 columns large-pull-8">
        <section class="component component--sidebar component--song_search " data-component="song_search">
    <header class="component__header">
        <h4 class="component__header-title"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#musicsearch"></use></svg> <strong>Song</strong> Suche</h4>
    </header>
    <div class="component__content">
       <div class="component__content-padding">
           <h3>Welcher Titel lief gerade im Radio?</h3>
           <form method="get" action="/musik/song-suche">
               <fieldset>
                   <label>Sender</label>
                   <select name="station">
                        <option value="rockantenne"  >ROCK ANTENNE</option>
<option value="heavymetal"  >Heavy Metal</option>
<option value="classicperlen"  >Classic Perlen</option>
<option value="deutschrock"  >Deutschrock</option>
<option value="softrock"  >Soft Rock</option>
<option value="alternative"  >Alternative</option>
<option value="youngstars"  >Young Stars</option>
<option value="ralocal01"  >Erding Freising Ebersberg</option>
                    
                   </select>

                   <div class="date_wrapper">
                       <label for="text-field-sidebar-songsearch"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#calendar"></use></svg> Datum</label>
                       <input type="text" name="date" value="" id="text-field-sidebar-songsearch" data-component="datepicker" data-options="maxDate:;" aria-haspopup="true" aria-expanded="false" aria-readonly="false" class="datepicker" placeholder="DD.MM.YYYY">
                   </div>
                   <div class="time_wrapper">
                       <label><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#clock"></use></svg> Uhrzeit</label>
                       <input type="text" name="hour" value="" aria-haspopup="false" aria-expanded="false" aria-readonly="false" class="hourpicker" placeholder="00"> <span class="small-extra-padding-top">:</span>
                       <input type="text" name="minutes" value="" aria-haspopup="false" aria-expanded="false" aria-readonly="false" class="minutepicker" placeholder="00">
                   </div>
                   <div class="button_wrapper">
                       <p class="no-margin-bottom text-right">
                           <input type="submit" class="button no-margin-bottom" value="Suchen">
                       </p>
                   </div>
               </fieldset>
           </form>
       </div>
    </div>
</section>
<div id="medium_rectangle_1" class="aditem "></div><section class="component component--sidebar component--star_search ">
    <header class="component__header">
        <h4 class="component__header-title"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#starsearch"></use></svg> <strong>Star</strong> Suche</h4>
    </header>
    <div class="component__content">
        <div class="component__content-padding">
            <form action="/musik/stars/" method="get">
                <fieldset>
                    <label for="artist">Interpret</label>
                    <input type="text" name="artist" id="artist" placeholder="Interpret">
                    <p class="text-right no-margin-bottom">
                        <input type="submit" class="button no-margin-bottom" value="Suchen">
                    </p>
                </fieldset>
            </form>
        </div>
    </div>
</section><div id="widget-sidebar" class="aditem "></div><section class="component component--sidebar component--webradio--sidebar " data-component="webradio">
    <header class="component__header">
        <h4 class="component__header-title"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#equalizer"></use></svg> <strong>Jetzt</strong> Läuft</h4>
    </header>
    <div class="component__content">
        <div class="webradio__default-view">
            <div class="webradio__onair-show show-with-js">
                <img src="/assets/tpl/img/placeholder.gif" alt="Moderator/in" class="webradio__moderatoravatar" data-componentproperty="moderatoravatar" onerror='this.style.display="none"'>
                <div class="webradio__showinfo">
                    <span class="webradio__moderator" data-componentproperty="moderator"></span>
                    <span class="webradio__showtitle" data-componentproperty="showtitle"></span>
                </div>
            </div>
            <div class="webradio__tunein">
                <a href="http://www.webradio.de/rock-antenne/rockantenne-de" target="_blank">
                    <svg role="presentation" width="32" height="32"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#broadcast"></use></svg>
                    <span class="text">Jetzt Radio hören</span>
                    <span class="webradio__playbutton"><svg role="presentation" width="28" height="28"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#play"></use></svg></span>
                </a>
            </div>
        </div>
    </div>
</section><section class="component component--sidebar component--custom-sidebar ">
    
    <header class="component__header">
        <h4 class="component__header-title"><svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#exclamation"></use></svg>  <strong>ROCK ANTENNE präsentiert:</strong></h4>
    </header>
    <div class="component__content">
        <div  class="row  "  >
    <div class="small-12 columns">
        <div class="teasers count-4 "><article data-teaserid="" class="teaser_item width-12 " itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting">

    <div class="teaser_item__media">
        <noscript>
            <img itemprop="image" src="//cdn.antenne.de/rockantenne-de/uploads/images/konzerte/2017/neu_edguy_vorschau_1200x627.jpg" width="502" height="250" alt="Herbst 2017: Edguy / Jubil&amp;auml;umstour" />
        </noscript>
        
        <img
            src="/assets/tpl/img/placeholder.gif"
	        data-teasersrcset='{
        	    "1030":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.4c955f86.jpg",
        	    "766":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.607485d5.jpg",
        	    "704":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.004228a4.jpg",
        	    "640":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.e63a3291.jpg",
        	    "502":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.07ea3af2.jpg",
        	    "414":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.28f28980.jpg",
        	    "326":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.33bc3280.jpg",
        	    "238":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_edguy_vorschau_1200x627.d4c81784.jpg"
        	}'
        
            class="lazyload"
            title="Herbst 2017: Edguy / Jubil&amp;auml;umstour">
    
    </div>
    <div class="teaser_item__content">
        <h3 class="teaser_item__title">
            
            
            <a href="/konzerte/konzerte/edguy-live-in-bayern" target="_self" title="Herbst 2017: Edguy / Jubil&auml;umstour" itemprop="url">
                <span itemprop="headline">Herbst 2017: Edguy / Jubil&auml;umstour </span>
            </a>
        </h3>
    </div>
   
    <a class="faux-block-link-overlay" href="/konzerte/konzerte/edguy-live-in-bayern" target="_self" data-id="" title="Herbst 2017: Edguy / Jubil&auml;umstour">
        Herbst 2017: Edguy / Jubil&auml;umstour
    </a>
</article>
<article data-teaserid="" class="teaser_item width-12 " itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting">

    <div class="teaser_item__media">
        <noscript>
            <img itemprop="image" src="//cdn.antenne.de/rockantenne-de/uploads/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.jpg" width="502" height="250" alt="Herbst 2017: Eisbrecher / Deutschlandtour" />
        </noscript>
        
        <img
            src="/assets/tpl/img/placeholder.gif"
	        data-teasersrcset='{
        	    "1030":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.4c955f86.jpg",
        	    "766":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.607485d5.jpg",
        	    "704":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.004228a4.jpg",
        	    "640":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.e63a3291.jpg",
        	    "502":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.07ea3af2.jpg",
        	    "414":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.28f28980.jpg",
        	    "326":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.33bc3280.jpg",
        	    "238":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_eisbrecher_vorschau_1200x627.d4c81784.jpg"
        	}'
        
            class="lazyload"
            title="Herbst 2017: Eisbrecher / Deutschlandtour">
    
    </div>
    <div class="teaser_item__content">
        <h3 class="teaser_item__title">
            
            
            <a href="/konzerte/konzerte/eisbrecher-live-deutschland-2017" target="_self" title="Herbst 2017: Eisbrecher / Deutschlandtour" itemprop="url">
                <span itemprop="headline">Herbst 2017: Eisbrecher / Deutschlandtour </span>
            </a>
        </h3>
    </div>
   
    <a class="faux-block-link-overlay" href="/konzerte/konzerte/eisbrecher-live-deutschland-2017" target="_self" data-id="" title="Herbst 2017: Eisbrecher / Deutschlandtour">
        Herbst 2017: Eisbrecher / Deutschlandtour
    </a>
</article>
<article data-teaserid="" class="teaser_item width-12 " itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting">

    <div class="teaser_item__media">
        <noscript>
            <img itemprop="image" src="//cdn.antenne.de/rockantenne-de/uploads/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.jpg" width="502" height="250" alt="Herbst/Winter: B&amp;uuml;lent Ceylan" />
        </noscript>
        
        <img
            src="/assets/tpl/img/placeholder.gif"
	        data-teasersrcset='{
        	    "1030":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.4c955f86.jpg",
        	    "766":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.607485d5.jpg",
        	    "704":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.004228a4.jpg",
        	    "640":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.e63a3291.jpg",
        	    "502":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.07ea3af2.jpg",
        	    "414":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.28f28980.jpg",
        	    "326":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.33bc3280.jpg",
        	    "238":"//cdn.antenne.de/thumbs/images/konzerte/2017/neu_buelent-ceylan_vorschau_1200x627.d4c81784.jpg"
        	}'
        
            class="lazyload"
            title="Herbst/Winter: B&amp;uuml;lent Ceylan">
    
    </div>
    <div class="teaser_item__content">
        <h3 class="teaser_item__title">
            
            
            <a href="/konzerte/konzerte/herbst-winter-2017-buelent-ceylan-/-bayern" target="_self" title="Herbst/Winter: B&uuml;lent Ceylan" itemprop="url">
                <span itemprop="headline">Herbst/Winter: B&uuml;lent Ceylan </span>
            </a>
        </h3>
    </div>
   
    <a class="faux-block-link-overlay" href="/konzerte/konzerte/herbst-winter-2017-buelent-ceylan-/-bayern" target="_self" data-id="" title="Herbst/Winter: B&uuml;lent Ceylan">
        Herbst/Winter: B&uuml;lent Ceylan
    </a>
</article>
<article data-teaserid="" class="teaser_item width-12 " itemprop="blogPost" itemscope itemtype="http://schema.org/BlogPosting">

    <div class="teaser_item__media">
        <noscript>
            <img itemprop="image" src="//cdn.antenne.de/rockantenne-de/uploads/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.jpg" width="502" height="250" alt="Hier geht&amp;#039;s zum Konzertkalender &amp;gt;" />
        </noscript>
        
        <img
            src="/assets/tpl/img/placeholder.gif"
	        data-teasersrcset='{
        	    "1030":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.4c955f86.jpg",
        	    "766":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.607485d5.jpg",
        	    "704":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.004228a4.jpg",
        	    "640":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.e63a3291.jpg",
        	    "502":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.07ea3af2.jpg",
        	    "414":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.28f28980.jpg",
        	    "326":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.33bc3280.jpg",
        	    "238":"//cdn.antenne.de/thumbs/images/sidebar/konzerte/konzerte-alle_sidebar_326x250.d4c81784.jpg"
        	}'
        
            class="lazyload"
            title="Hier geht&amp;#039;s zum Konzertkalender &amp;gt;">
    
    </div>
    <div class="teaser_item__content">
        <h3 class="teaser_item__title">
            
            
            <a href="/konzerte/konzerte/" target="_self" title="Hier geht&#039;s zum Konzertkalender &gt;" itemprop="url">
                <span itemprop="headline">Hier geht&#039;s zum Konzertkalender &gt; </span>
            </a>
        </h3>
    </div>
   
    <a class="faux-block-link-overlay" href="/konzerte/konzerte/" target="_self" data-id="" title="Hier geht&#039;s zum Konzertkalender &gt;">
        Hier geht&#039;s zum Konzertkalender &gt;
    </a>
</article></div>
    </div>
</div>
    </div>
</section>   
<div id="medium_rectangle_2" class="aditem "></div>
    </aside>
</div>

                

            </div>
            
            <footer class="pagefooter">
    <div class="row">
        <div class="hide-for-small medium-3 large-2 columns">
            <p class="pagefooter__title">
                <a href="/empfang/" title="Empfang">Empfang</a>
            </p>
            <ul>
               <li><a href="/empfang/webradio" title="Webradio">Webradio</a></li>
<li><a href="/empfang/apps" title="APP">APP</a></li>
<li><a href="/empfang/ukw" title="UKW">UKW</a></li>
<li><a href="/empfang/dab" title="DAB+">DAB+</a></li>
<li><a href="/empfang/kabel" title="Kabel">Kabel</a></li>
<li><a href="/empfang/sat" title="SAT">SAT</a></li>
<li><a href="/empfang/smart-tv" title="Smart TV">Smart TV</a></li>
<li><a href="/empfang/der-beste-rock-nonstop-mit-amazon-alexa" title="Amazon Echo">Amazon Echo</a></li>
<li><a href="/empfang/streamlinks" title="Streamlinks">Streamlinks</a></li>
            </ul>

            <p class="pagefooter__title">
                <a href="/aktionen/" title="Aktionen">Aktionen</a>
            </p>
            <ul>
               <li><a href="/aktionen/uebersicht" title="&Uuml;bersicht">Übersicht</a></li>
<li><a href="/aktionen/rtm-2017-18/" title="ROCK THE MOUNTAIN 2017/2018">ROCK THE MOUNTAIN 2017/2018</a></li>
<li><a href="/aktionen/die-rock-antenne-motorradtour/" title="Die ROCK ANTENNE Motorradtour">Die ROCK ANTENNE Motorradtour</a></li>
<li><a href="/aktionen/events/" title="Events, die rocken!">Events, die rocken!</a></li>
<li><a href="/aktionen/taste-tosteron/" title="Taste-Tosteron: M&auml;nnerrezepte mit Star-Koch Tobi Stegmann">Taste-Tosteron: Männerrezepte mit Star-Koch Tobi Stegmann</a></li>
            </ul>
        </div>

        <div class="hide-for-small medium-3 large-2 columns">
            <p class="pagefooter__title">
                <a href="/programm/" title="Programm">Programm</a>
            </p>
            <ul>
                <li><a href="/programm/stars-im-studio/" title="Stars im Studio">Stars im Studio</a></li>
                <li><a href="/programm/team/" title="Das ROCK ANTENNE Team">Team</a></li>
                <li><a href="/programm/rock-cities/" title="Neues aus unseren Rock Cities">Rock Cities</a></li>
                <li><a href="/programm/youtube-highlights/" title="Unsere YouTube Highlights">YouTube Highlights</a></li>
                <li><a href="/programm/pick-of-the-week" title="Unser Pic(k) of the Week">Pic(k) of the Week</a></li>
            </ul>

            <p class="pagefooter__title">
                <a href="/programm/sendungen/" title="Sendungen">Sendungen</a>
            </p>
            <ul>
               
            </ul>


        </div>

        <div class="hide-for-small medium-3 large-2 columns">
            <p class="pagefooter__title">
                <a href="/musik/" title="Musik">Musik</a>
            </p>
            <ul>
                <li><a href="/musik/song-suche" title="Song-Suche">Song-Suche</a></li>
<li><a href="/musik/stars/" title="Stars">Stars</a></li>
<li><a href="/musik/musik-news/" title="Music News">Music News</a></li>
<li><a href="/musik/album-der-woche/" title="Album der Woche">Album der Woche</a></li>
<li><a href="/musik/rock-antenne-band" title="ROCK ANTENNE Band">ROCK ANTENNE Band</a></li>
<li><a href="/musik/soundcheck" title="Soundcheck">Soundcheck</a></li>
            </ul>

            <p class="pagefooter__title">
                <a href="/konzerte/" title="Konzerte">Konzerte</a>
            </p>
            <ul>
               <li><a href="/konzerte/konzerte/" title="Konzertkalender">Konzertkalender</a></li>
<li><a href="/konzerte/festival-guide/" title="Festival-Guide">Festival-Guide</a></li>
<li><a href="/konzerte/radiokonzerte" title="Radiokonzerte">Radiokonzerte</a></li>
            </ul>

        </div>

        <div class="hide-for-small medium-3 large-2 columns">
            <p class="pagefooter__title">
                <a href="/rock-antenne/" title="Infos">Infos</a>
            </p>
            <ul>
                <li><a href="/rock-antenne/kontakt/" title="Kontakt">Kontakt</a></li>
                <li><a href="/rock-antenne/newsletter/" title="Rock-Letter">Rock-Letter</a></li>
                <li><a href="/rock-antenne/unternehmensgruppe" title="Unternehmensgruppe">Unternehmensgruppe</a></li>
                <li><a href="/index/jobs" title="Jobs">Jobs</a></li>
                <li><a href="/programm/werbung-auf-rock-antenne" title="Werbung auf ROCK ANTENNE">Werbung auf ROCK ANTENNE</a></li>
                <li><a href="/programm/inside" title="ROCK ANTENNE Inside">ROCK ANTENNE Inside</a></li>
                <li><a href="/rock-antenne/impressum" title="Impressum">Impressum</a></li>
                <li><a href="/rechtliche-hinweise" title="Rechtliche Hinweise">Rechtliche Hinweise</a></li>
                <li><a href="/rock-antenne/datenschutz" title="Datenschutzerkl&auml;rung">Datenschutzerklärung</a></li>
            </ul>
        </div>

        <ul class="social-list">
            <li>
                <a href="https://www.facebook.com/rockantenne" class="btn-social-fb" target="_blank" title="Facebook">
                    <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-fb"></use></svg>
                </a>
            </li>
            <li>
                <a href="https://google.com/+ROCKANTENNE879" class="btn-social-gp" target="_blank" title="Google Plus">
                    <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-gplus"></use></svg>
                </a>
            </li>
            <li>
                <a href="https://twitter.com/rockantenne" class="btn-social-tt" target="_blank" title="Twitter">
                    <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-twitter"></use></svg>
                </a>
            </li>
            <li>
                <a href="https://www.youtube.com/rockantenne" class="btn-social-yt" target="_blank" title="YouTube">
                    <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-youtube"></use></svg>
                </a>
            </li>
            <li>
                <a href="mailto:studio@rockantenne.de" class="btn-social-mail" title="E-Mail">
                    <svg role="presentation"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg#btn-mail"></use></svg>
                </a>
            </li>
        </ul>
    </div>

    <div class="row">
        <div class="small-12 columns copyright">
            <p>© 2017 ROCK ANTENNE</p>
        </div>
    </div>
</footer>

        
        </div>
        
    </div>
    
    <script>
    var Antenne = {
        namespace: 'rockantenne-de-v3'
        ,config: {
            context: 'rockantenne-de'
            ,resource_id: '814'
            ,svg_url: '/assets/tpl/rockantenne-de/dist/sprite.1470221044.svg'
            ,ajax_url: '//api.antenne.de/1.0.0/antenneservices/'
            ,api_url: 'https://api.antenne.de/1.0.0/'
            ,serviceapi_url: 'https://www.antenne.de/api/'
            ,serviceapi_key: '62238199f71ea5d3cd55d46592a5847a4770f974'
            ,serviceapi_versions: {
                geocoding: '1.0'
            }
            ,site_version: '1470221044'
            ,cdn_url: 'http://cdn.antenne.de/rockantenne-de/uploads/'
            ,ads: {
                disabled: false
                ,oms_site: 'pn.rock-antenne.de'
                ,oms_zone: 'entertainment'
                ,oms_container: '/assets/templates/rockantenne-de/dist/omsv.1470221044.js'
                ,oms_UseDwrite: false
                ,gpt_id: '59919820'
                ,yoc_zone: '14'
                ,yoc_config: {}
                ,smartclip_url: '//des.smartclip.net/ads?type=dyn&plc=72306&cat=&adtag=&sz=400x320&rnd=__random-number__'
                ,billboard_height_for_wallpapers: 160
                ,mobile_ab_factor: 0 
            }
            ,fb_appid: '220976516001'
            ,logging: false
            ,antenneAuthInterval: 120000
            ,antenneAuthEnabled: false
            ,googleApiKey: 'AIzaSyCuDc2nG4jF0GZTT1I6iWvGYZWOB9h73_g'
        }
        ,components: {}
        ,iam_data: {
            st: "rockant",
            cp: "song-suche",
            sv: "ke",
            mg: "yes",
            co: "musik/song-suche"
        }
        ,cookieconsent_options: {
            enabled: false,
            message: "Cookies erleichtern die Bereitstellung unserer Dienste. Mit der Nutzung unserer Dienste erklären Sie sich damit einverstanden, dass wir Cookies verwenden.",
            dismiss: "OK",
            learnMore: "Erfahren Sie mehr »",
            link: "http://www.antenne.de/antenne-bayern/datenschutz",
            theme: false
        }
    };
    
    var UserService = {
        namespace: 'userservice',
        components: {},
        platformkey: 'web-rockantenne-de'
    };
    

    
    function doSZMRequest(options){
        
        if (typeof options === 'object') {
            var iam_data = $.extend( {}, Antenne.iam_data, options );
            iom.c( iam_data , 1 );
        } else {
            iom.c( Antenne.iam_data , 1 );
        }
        return;
    }
    
    
    function ReloadPixelImages(){
    	doSZMRequest();
    }
    
    onContentLoaded(function(){
        if (window.jqueryLoaded !== true) {
            loadJS('/assets/templates/rockantenne-de/dist/jquery-2.1.3.min.js', false, function(){
                loadJS('/assets/templates/rockantenne-de/dist/main.1470221044.js', true);
            });
        } else {
            loadJS('/assets/templates/rockantenne-de/dist/main.1470221044.js', true);
        }
        
        
        loadJS('https://script.ioam.de/iam.js', true, function(){
            doSZMRequest();
        });
    });
    
    
    
    
    
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-37388162-1', {
        cookieDomain: 'www.rockantenne.de',
        siteSpeedSampleRate: 5
    });
    ga('set', 'anonymizeIp', true);
    ga('send', 'pageview');
    
    
</script>


    
</body>
</html>
    http_version: 
  recorded_at: Mon, 02 Oct 2017 14:16:34 GMT
recorded_with: VCR 3.0.3
